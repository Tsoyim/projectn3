#!/bin/sh

check_output() {
    cmp .output.$1 .expected_output.$1 2>/dev/null >/dev/null
    if [ $? -eq 0 ]
    then
        echo "PASSED"
        #rm $1 $2
    else
        echo "FAILED"
        echo "Output from project3 binary is in file: .output.$1"
        echo "Expected output is in file: .expected_output.$1"
        echo "Debug output from project3 binary is in file: .debug_output.$1"
    fi
    echo
}

echo "###########################################################################"
echo "NOTE: Guidelines for using this script:"
echo "      - Tests check output written to stdout only."
echo "        If you have debug output in stdout, it may cause test failures."
echo "      - This is not a comprehensive set of test cases."
echo "        It is intended to help you do basic checks on your project."
echo "      - If your program fails any test, it will print the output files"
echo "        generated by your program and the output expected for the test case."
echo "      - The script should take about 20 seconds to complete."
echo "###########################################################################"
echo
echo
echo "Rebuilding project3..."
make clean; make -j4 project3
echo "Done rebuilding project3"
echo




## Test Case 5
echo -n "Test case 5: Sending 10 packets (with corrupt probability of 20% and drop probability of 20%) and expecting receiver to print them out in order: "
(sleep 0.5; for i in `seq 1 1000`; do echo "msg 0 0 Packet: $i"; sleep 0.1; done; sleep 5; echo "exit") | ./project3 -r 0.2 -c 0.2 -r 1 -s 1 > .output_1500 2> .debug_output_1500

(for i in `seq 1 1000`; do echo "<RECV0>:[Packet: $i]"; done) > .expected_output_1500

check_output 5


